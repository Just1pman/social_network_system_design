@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Container(ApiGateway, "ApiGateway", "", "")
Container(ServiceDiscovery, "ServiceDiscovery", "Apache ZooKeeper", "")
Container(ApiUsersLoadBalancer, "LoadBalancer", "Nginx", "")
ContainerQueue(messageQueue, "Очередь сообщений", "Kafka", "Передача изменений связей между пользователями")
Container(UserService, "UserService", "", "")
Container(UserLoadBalancer, "UserLoadBalancer", "", "")

Container(PostService, "UserService", "", "")
Container(PostLoadBalancer, "PostLoadBalancer", "", "")

System_Boundary(NewsFeedServiceSystem, "News Service System") {
    Container(NewsFeedServiceDatabase, "Redis", "", $tags="db")
    Container(ApiNewsService, "ApiNewsService", "Go", "")
}

Rel(ApiGateway, ServiceDiscovery, "", "ZCP")
Rel(ApiGateway, ApiUsersLoadBalancer, "Получение новостной ленты", "gRPC")
Rel(ApiUsersLoadBalancer, ApiNewsService, "", "gRPC")
Rel(ApiUsersLoadBalancer, ServiceDiscovery, "", "ZCP")
Rel(ApiNewsService, NewsFeedServiceDatabase, "", "")
Rel(ApiNewsService, messageQueue, "Вычитываем события о добавлении/удалении друзей у пользователя, обновляем ленты", "TCP")
Rel(ApiNewsService, ServiceDiscovery, "", "ZCP")
Rel(UserLoadBalancer, UserService, "", "gRPC")
Rel(ApiNewsService, UserLoadBalancer, "Получение информации о пользователях", "gRPC")

Rel(PostLoadBalancer, PostService, "", "gRPC")
Rel(ApiNewsService, PostLoadBalancer, "Получение информации о постах", "gRPC")

@enduml